      SUBROUTINE RD051
      CHARACTER AELECD,AHI,AHF,AHM
      COMMON /HELEM1/ NHEL
      COMMON /HELEM2/ HEL(99)
      COMMON /HTOL1/ TOLI1,TOLI2,TOLI3,TOLI4,TOLI5,TOLI6
C
      COMMON /UNIT1/ IUNITA
      COMMON /UNIT2/ IUNITB
      DATA AHI/'I'/, AHF/'F'/, AHM/'M'/
C
C
C     SUBROUTINE 'RD051' ...
C        READS AND INTERPRETS REL LINE
C        (ALSO GENERATES OR READS POSSIBLE MATRIX ELEMENTS)
C
C
C
C     --- READ REL LINE
C         (MATRIX ELEMENT CODE AND RANGE, INPUT TOLERANCES)
      READ(IUNITA,6200) AELECD,IRANGE,
     $ TOLI1,TOLI2,TOLI3,TOLI4,TOLI5,TOLI6
C
C     --- IF NOT VALID MATRIX ELEMENT CODE, WRITE ERROR MESSAGE AND
C         STOP PROGRAM EXECUTION
      IF(AELECD.EQ.AHI.OR.AELECD.EQ.AHF.OR.AELECD.EQ.AHM) GO TO 100
         WRITE(IUNITB,6300)
         STOP
  100 CONTINUE
C
C     --- IF NOT MANUAL INPUT OF POSSIBLE MATRIX ELEMENTS,
C         CHECK FOR INTEGER OR FRACTIONAL ELEMENT CODES
      IF(AELECD.NE.AHM) GO TO 200
C
C        --- MANUAL INPUT OF POSSIBLE MATRIX ELEMENTS
         IF(IRANGE.GE.2) GO TO 120
C
C           --- INVALID NUMBER OF POSSIBLE MATRIX ELEMENTS,
C               WRITE ERROR MESSAGE AND STOP PROGRAM EXECUTION
             WRITE(IUNITB,6350)
             STOP
  120    CONTINUE
         NHEL = IRANGE
         READ(IUNITA,6400) (HEL(K),K=1,NHEL)
         IRANGE = 0
         GO TO 600
  200 CONTINUE
C
C     --- IF INTEGER RANGE IS NOT USED TO SPECIFY POSSIBLE
C         MATRIX ELEMENTS, FRACTIONAL RANGE IS USED
      IF(AELECD.NE.AHI) GO TO 380
C
C        --- INTEGER RANGE IS USED TO SPECIFY POSSIBLE MATRIX ELEMENTS
         IF(IRANGE.GE.1.AND.IRANGE.LE.40) GO TO 220
C
C           --- INVALID RANGE OF POSSIBLE MATRIX ELEMENTS,
C               WRITE ERROR MESSAGE AND STOP PROGRAM EXECUTION
             WRITE(IUNITB,6500)
             STOP
  220    CONTINUE
C
C        --- GENERATE INTEGER MATRIX ELEMENTS
         NHEL = 2*IRANGE + 1
         IRANGE = (-1)*IRANGE
         DO 320 I = 1,NHEL
            HEL(I) = IRANGE
            IRANGE = IRANGE + 1
  320    CONTINUE
         IRANGE = 0
         GO TO 600
  380 CONTINUE
C
C     --- FRACTIONAL RANGE IS USED TO SPECIFY POSSIBLE MATRIX ELEMENTS
      IF(IRANGE.GE.1.AND.IRANGE.LE.10) GO TO 390
C
C        --- INVALID RANGE OF POSSIBLE MATRIX ELEMENTS,
C            WRITE ERROR MESSAGE AND STOP PROGRAM EXECUTION
          WRITE(IUNITB,6500)
          STOP
  390 CONTINUE
C
C     --- GENERATE INTEGER MATRIX ELEMENTS
      NHEL = 2*IRANGE + 1
      IRANGE = (-1)*IRANGE
      DO 420 I = 1,NHEL
         HEL(I) = IRANGE
         IRANGE = IRANGE + 1
  420 CONTINUE
      IRANGE = 0
C
C     --- ADD FRACTIONAL MATRIX ELEMENTS
      HEL(NHEL+ 1) = -1.5
      HEL(NHEL+ 2) = -0.5
      HEL(NHEL+ 3) =  0.5
      HEL(NHEL+ 4) =  1.5
      HEL(NHEL+ 5) = -1.3333333
      HEL(NHEL+ 6) = -0.6666667
      HEL(NHEL+ 7) = -0.3333333
      HEL(NHEL+ 8) =  0.3333333
      HEL(NHEL+ 9) =  0.6666667
      HEL(NHEL+10) =  1.3333333
      HEL(NHEL+11) = -0.75
      HEL(NHEL+12) = -0.25
      HEL(NHEL+13) =  0.25
      HEL(NHEL+14) =  0.75
C
      NHEL = NHEL + 14
  600 CONTINUE
      RETURN
 6200 FORMAT(A1,2X,I2,5X,6F10.5)
 6300 FORMAT(////1X,'*RD051* ERROR ... Invalid matrix element code was s
     $pecified.')
 6350 FORMAT(////1X,'*RD051* ERROR ... Invalid number of possible matrix
     $ elements was specified.')
 6400 FORMAT(8F10.5)
 6500 FORMAT(////1X,'*RD051* ERROR ... Invalid range of possible matrix
     $elements was specified.')
      END
